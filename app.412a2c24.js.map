{"version":3,"sources":["scripts/app.js"],"names":["createGame","app","document","querySelector","range","createRange","rulesToggle","rulesClose","rules","turns","toObj","entries","reduce","acc","entry","table","ROCK","beats","PAPER","SCISSORS","LIZARD","SPOCK","onPlay","ev","houseSelection","userSelection","target","dataset","value","Math","floor","random","length","innerHTML","userWon","houseTurn","appendChild","createContextualFragment","message","template","buttonTemplate","toggleRules","classList","toggle","querySelectorAll","forEach","button","addEventListener"],"mappings":";AA8FU,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EA9FV,IAAMA,EAAa,WAAM,IAAA,EACjBC,EAAMC,SAASC,cAAc,QAC7BC,EAAQF,SAASG,cAEjBC,EAAcJ,SAASC,cAAc,iBACrCI,EAAaL,SAASC,cAAc,gBACpCK,EAAQN,SAASC,cAAc,UAQ/BM,EAAQ,CAND,OACC,QACG,WACF,SACD,SAIRC,EAAQ,SAACC,GACNA,OAAAA,EAAQC,OAAO,SAACC,EAAKC,GAEnBD,OADPA,EAAIC,IAAS,EACND,GACN,KAGCE,GACHC,EAAAA,EAAAA,GAhBU,OAgBH,CACNC,MAAOP,EAAM,CAdF,SADE,eAiBdQ,EAAAA,EAlBW,QAkBH,CACPD,MAAOP,EAAM,CAhBH,QAJD,WAsBVS,EAAAA,EApBc,WAoBH,CACVF,MAAOP,EAAM,CAtBH,QAEC,aAsBZU,EAAAA,EAtBY,SAsBH,CACRH,MAAOP,EAAM,CAzBH,QAGA,YAwBXW,EAAAA,EAxBW,QAwBH,CACPJ,MAAOP,EAAM,CA3BA,WAFJ,WAeb,GAyCMY,EAAS,SAACC,GAGPC,IAFDC,IAAAA,EAAgBF,EAAGG,OAAOC,QAAQC,MACpCJ,EAAiBC,EACdD,IAAmBC,GACxBD,EAAiBf,EAAMoB,KAAKC,MAAMD,KAAKE,SAAWtB,EAAMuB,SAG1D/B,EAAIgC,UAAY,GAEVC,IAhCeC,EAgCfD,GAhCeC,EAgCcX,EA/B5BT,EA+BaU,GA/BGR,MAAMkB,IAiC7BlC,EAAImC,YACFhC,EAAMiC,yBA/Ba,SAAgD,GAA7CZ,IAAAA,EAAAA,EAAAA,cAAeD,EAAAA,EAAAA,eACjCc,EADiDJ,EAAAA,QAC7B,UAAY,WAe/BK,MAX0Bd,mPAAAA,OAAAA,EAGDa,yJAAAA,OAAAA,EAKKd,2RAAAA,OAAAA,EAXrC,sCA8BIgB,CAAe,CAAEf,cAAAA,EAAeD,eAAAA,EAAgBU,QAAAA,OAKhDO,EAAc,WAClBjC,EAAMkC,UAAUC,OAAO,OAGzBzC,SACG0C,iBAAiB,gBACjBC,QAAQ,SAACC,GAAWA,OAAAA,EAAOC,iBAAiB,QAASzB,KAExDhB,EAAYyC,iBAAiB,QAASN,GACtClC,EAAWwC,iBAAiB,QAASN,IAGvCzC","file":"app.412a2c24.js","sourceRoot":"..","sourcesContent":["const createGame = () => {\r\n  const app = document.querySelector(\"#app\");\r\n  const range = document.createRange();\r\n\r\n  const rulesToggle = document.querySelector(\"#rules-toggle\");\r\n  const rulesClose = document.querySelector(\"#rules-close\");\r\n  const rules = document.querySelector(\"#rules\");\r\n\r\n  const ROCK = \"Rock\";\r\n  const PAPER = \"Paper\";\r\n  const SCISSORS = \"Scissors\";\r\n  const LIZARD = \"Lizard\";\r\n  const SPOCK = \"Spock\";\r\n\r\n  const turns = [ROCK, PAPER, SCISSORS, LIZARD, SPOCK];\r\n\r\n  const toObj = (entries) => {\r\n    return entries.reduce((acc, entry) => {\r\n      acc[entry] = true;\r\n      return acc;\r\n    }, {});\r\n  };\r\n\r\n  const table = {\r\n    [ROCK]: {\r\n      beats: toObj([LIZARD, SCISSORS]),\r\n    },\r\n    [PAPER]: {\r\n      beats: toObj([SPOCK, ROCK]),\r\n    },\r\n    [SCISSORS]: {\r\n      beats: toObj([PAPER, LIZARD]),\r\n    },\r\n    [LIZARD]: {\r\n      beats: toObj([PAPER, SPOCK]),\r\n    },\r\n    [SPOCK]: {\r\n      beats: toObj([SCISSORS, ROCK]),\r\n    },\r\n  };\r\n\r\n  const win = (userTurn, houseTurn) => {\r\n    return table[userTurn].beats[houseTurn];\r\n  };\r\n\r\n  const buttonTemplate = ({ userSelection, houseSelection, userWon }) => {\r\n    const message = userWon ? \"YOU WIN\" : \"YOU LOSE\";\r\n    let template = `<div class=\"flex flex-row-l flex-column justify-around items-center pa4-l w-100 h-100\">\r\n    <div class=\"flex flex-column items-center justify-center w-33-l tc\">\r\n    <p class=\"f2 white b\">You Picked</p>\r\n    <button class=\"game-button\" id=${userSelection}></button>\r\n    </div>\r\n    <div class=\"flex flex-column-l flex-row items-center justify-center w-33-l appear-4\">\r\n        <p class=\"f2 white b ma2\">${message}</p>\r\n        <a class=\"bg-white pa4 no-underline gray br4 b tc grow\" href=\".\">Play Again</a>\r\n    </div>\r\n    <div class=\"flex flex-column items-center justify-center w-33-l tc appear\">\r\n        <p class=\"f2 white b\">The House Picked</p>\r\n        <button class=\"game-button\" id=${houseSelection}></button>\r\n    </div>\r\n    </div>`;\r\n    return template;\r\n  };\r\n\r\n  const onPlay = (ev) => {\r\n    const userSelection = ev.target.dataset.value;\r\n    let houseSelection = userSelection;\r\n    while (houseSelection === userSelection) {\r\n      houseSelection = turns[Math.floor(Math.random() * turns.length)];\r\n    }\r\n\r\n    app.innerHTML = \"\";\r\n\r\n    const userWon = win(userSelection, houseSelection);\r\n\r\n    app.appendChild(\r\n      range.createContextualFragment(\r\n        buttonTemplate({ userSelection, houseSelection, userWon })\r\n      )\r\n    );\r\n  };\r\n\r\n  const toggleRules = () => {\r\n    rules.classList.toggle(\"dn\");\r\n  };\r\n\r\n  document\r\n    .querySelectorAll(\".game-button\")\r\n    .forEach((button) => button.addEventListener(\"click\", onPlay));\r\n\r\n  rulesToggle.addEventListener(\"click\", toggleRules);\r\n  rulesClose.addEventListener(\"click\", toggleRules);\r\n};\r\n\r\ncreateGame();\r\n"]}